@model WebDevProject.Models.CodeQuestionViewModel
<html lang="en">
<head>

    <script src="js/vendor/jquery-1.9.1.js"></script>

    <!-- More examples at http://codemirror.net/demo/ -->
    <!-- add basic CodeMirror functionality -->
    <script src="~/lib/CodeMirror/lib/codemirror.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/lib/CodeMirror/addon/selection/active-line.js" type="text/javascript" charset="utf-8"></script>
    <link rel="stylesheet" href="~/lib/CodeMirror/lib/codemirror.css" />

    <!-- add python-mode dependencies -->
    <script src="~/lib/CodeMirror/mode/python/python.js" type="text/javascript" charset="utf-8"></script>

</head>
<body>
    <div class="container mainBody">
        <div class="row">
            <div class="col-2 scrollable-menu questionPane">
                <div class="scrollable-menu leftPane listPane">
                    @foreach (var item in Model.questionList)
                    {
                        @if (item.isMultipleChoice)
                        {
                            <a href="/Home/MultipleChoiceView/@item.Id/@item.TopicId">Question @item.questionOrder</a>
                            <br />
                        }
                        else
                        {
                            <a href="/Home/CodeQuestionView/@item.Id/@item.TopicId">Question @item.questionOrder</a>
                            <br />
                        }
                    }

                </div>


            </div>
            <div class="jumbotron col-8 scrollable-menu">

                <h3>@Html.DisplayFor(model => model.theQuestion.questionString)</h3>
                <br />
                <div id="editor1-pane">
                    <div id="editor1"></div>
                </div>


                <div class="row">
                    <div class="col-6">
                        <button type="button" class="btn btn-success compileButton" style="float:left">Compile</button>
                        <button type="button" class="btn btn-success submitButton">Submit</button>
                        @{ bool isEndOfList = false;}
                        @if (Model.theQuestion.questionOrder < Model.orderListLength)
                        {
                            isEndOfList = false;
                            <button type="button" class="btn btn-success" id="nextButton">Next</button>
                        }
                        else
                        {
                            isEndOfList = true;
                            <button type="button" class="btn btn-success" id="finishButton">Finish</button>
                        }
                    </div>
                </div>
                <div>
                    <h3>Output:</h3>
                    <br />
                    <div id="editor-2 pane">
                        <div id="editor2"></div>
                    </div>
                </div>
            </div>
            <div class="col-2 listPane scrollable-menu referencePane">
                <div>
                    @foreach (var item in Model.referenceList)
                    {
                        <a href="@item.Link">@item.Text</a>
                            <br />
                    }
                </div>

                <input type="image" src="~/img/PlusButton.png" data-toggle="modal" data-target="#AddReferenceModal" style="max-width:100%; height:auto;" id="addButton teacher" />

            </div>
        </div>
    </div>



    <!--Modal for adding a new Reference-->
    <div class="modal fade" id="AddReferenceModal" tabindex="-1" role="dialog" aria-labelledby="Login" aria-hidden="true">
        <div class="modal-dialog" style="transform: translate(0, 0%);">
            <div class="modal-content">
                <div class="modal-header" style="display:block">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h5 class="modal-title">Create</h5>
                </div>

                <div class="modal-body">
                    <!-- The form is placed inside the body of modal -->
                    @using (Html.BeginForm("QuestionAddReference", "Home", new { Id = Model.theQuestion.Id }, FormMethod.Post))
                    {
                        <form id="createForm" class="form-horizontal">
                            <div class="row form-group">
                                <label class="col-xs-3 control-label">Link:</label>
                                <div class="col-xs-5">
                                    <input type="text" class="form-control" name="Link" />
                                </div>
                            </div>

                            <div class="row form-group">
                                <label class="col-xs-3 control-label">Text:</label>
                                <div class="col-xs-5">
                                    <input type="text" class="form-control" name="Text" />
                                </div>
                            </div>

                            <input type="hidden" name="TopicId" value="@Model.theQuestion.TopicId" />
                            <input type="hidden" name="isMultipleChoice" value="@Model.theQuestion.isMultipleChoice.ToString()" />

                            <div class="row form-group">
                                <div class="col-xs-5 col-xs-offset-3">
                                    <input type="submit" class="btn btn-primary" value="Create">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>




    @{ string nextURL = "";}
    @{
        if (!isEndOfList)
        {
            if (Model.questionList[Model.theQuestion.questionOrder + 1].isMultipleChoice)
            {
                nextURL = "/Home/MultipleChoiceView/" + Model.questionList[Model.theQuestion.questionOrder + 1].Id + "/" + Model.theQuestion.TopicId;
            }
            else
            {
                nextURL = "/Home/CodeQuestionView/" + Model.questionList[Model.theQuestion.questionOrder + 1].Id + "/" + Model.theQuestion.TopicId;
            }
        }
    }
    @{ string finishURL = "/Home/TopicView/" + Model.theQuestion.TopicId;}
    @{ var suppliedCode = Html.DisplayFor(model => model.theQuestion.suppliedCode);}

    <script type="text/javascript">
        $(document).ready(function () {
            window.codemirror1 = CodeMirror($('#editor1').get(0), {
                value: "@suppliedCode",
                mode:  "python",
                readOnly: false,
                styleActiveLine: true,
                lineNumbers: true,
           });

            window.codemirror2 = CodeMirror($('#editor2').get(0), {
                value: "Output",
                mode: "python",
                readOnly: true,
                styleActiveLine: true,
                lineNumbers: true,
                });

            $("#finishButton").click(function () {
                window.location.href = "@finishURL";
            });

            $("#nextButton").click(function () {
                window.location.href = "@nextURL";
            });

        });
    </script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
    <script src="~/lib/simplemde/dist/simplemde.min.js" type="text/javascript"></script>
    <script>
        const lectureArea = new SimpleMDE({
            element: document.getElementById("textEditortest"),
            spellChecker: false,
            toolbar: false,
            status: false,
        });
        lectureArea.togglePreview()
    </script>
</body>
</html>